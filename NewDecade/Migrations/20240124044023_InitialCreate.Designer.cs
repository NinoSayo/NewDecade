// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewDecade.Data;

#nullable disable

namespace NewDecade.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240124044023_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int>("BlogPostId")
                        .HasColumnType("int");

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommenterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCommented")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("BlogPostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            BlogPostId = 1,
                            CommentContent = "This is a great post!",
                            CommenterName = "Alice",
                            DateCommented = new DateTime(2024, 1, 21, 4, 40, 23, 22, DateTimeKind.Utc).AddTicks(6800),
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            BlogPostId = 2,
                            CommentContent = "Nice work!",
                            CommenterName = "Bob",
                            DateCommented = new DateTime(2024, 1, 22, 4, 40, 23, 22, DateTimeKind.Utc).AddTicks(6810),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("NewDecade.Models.BlogPost", b =>
                {
                    b.Property<int>("BlogPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogPostId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BlogPostId");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            BlogPostId = 1,
                            Author = "John Doe",
                            Content = "This is the content of the first blog post.",
                            DatePublished = new DateTime(2024, 1, 17, 4, 40, 23, 22, DateTimeKind.Utc).AddTicks(6520),
                            ImageUrl = "sample.jpg",
                            Title = "First Blog Post"
                        },
                        new
                        {
                            BlogPostId = 2,
                            Author = "Jane Doe",
                            Content = "This is the content of the second blog post.",
                            DatePublished = new DateTime(2024, 1, 19, 4, 40, 23, 22, DateTimeKind.Utc).AddTicks(6530),
                            ImageUrl = "sample.jpg",
                            Title = "Second Blog Post"
                        });
                });

            modelBuilder.Entity("NewDecade.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("NewDecade.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Admin Street",
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "adminpassword",
                            PhoneNumber = "123-456-7890",
                            RegistrationDate = new DateTime(2023, 10, 24, 4, 40, 23, 22, DateTimeKind.Utc).AddTicks(6840),
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "456 Customer Street",
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "customerpassword",
                            PhoneNumber = "987-654-3210",
                            RegistrationDate = new DateTime(2023, 11, 24, 4, 40, 23, 22, DateTimeKind.Utc).AddTicks(6850),
                            Role = "Customer",
                            Username = "customer"
                        });
                });

            modelBuilder.Entity("Comment", b =>
                {
                    b.HasOne("NewDecade.Models.BlogPost", "BlogPost")
                        .WithMany("Comments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewDecade.Models.Users", "Users")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogPost");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NewDecade.Models.BlogPost", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("NewDecade.Models.Users", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
